{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projekt_python_projektowaniestron\\\\react-django-ecommerce\\\\ecommerce-frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from \"../components/Message\";\nimport { addToCart } from \"../actions/cartActions\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CartScreen(_ref) {\n  _s();\n\n  let {\n    match,\n    history\n  } = _ref;\n  const productId = match.params.id;\n  const quantity = Location.search ? Number(Location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart; // console.log('cartItems', cartItems)\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, quantity));\n    }\n  }, [dispatch, productId, quantity]);\n\n  const removeFromCartHandler = id => {\n    console.log('remove:', id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Koszyk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"Tw\\xF3j koszyk jest pusty \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Wr\\xF3\\u0107 do strony g\\u0142\\xF3wnej\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: item.image,\n                alt: item.name,\n                fluid: true,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/product/${item.product}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 2,\n              children: [\"$\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: item.quantity,\n                onChange: e => dispatch(addToCart(item.product, e.target.value)),\n                children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: x + 1,\n                  children: x + 1\n                }, x + 1, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 29\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                variant: \"light\",\n                onClick: () => removeFromCartHandler(item.product),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, item.product, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["D:/Projekt_python_projektowaniestron/react-django-ecommerce/ecommerce-frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","FontAwesomeIcon","faTrash","CartScreen","match","history","productId","params","id","quantity","Location","search","Number","split","dispatch","cart","state","cartItems","removeFromCartHandler","console","log","length","map","item","image","name","product","price","e","target","value","Array","countInStock","keys","x"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Row,Col,ListGroup,Image,Form, Button,Card} from 'react-bootstrap'\r\nimport Message from \"../components/Message\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faTrash\r\n  } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction CartScreen({match, history}) {\r\n    const productId = match.params.id\r\n    const quantity = Location.search ? Number(Location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state =>state.cart)\r\n    const {cartItems} = cart\r\n\r\n    // console.log('cartItems', cartItems)\r\n    \r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, quantity))\r\n        }\r\n    }, [dispatch, productId, quantity])\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        console.log('remove:', id)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Koszyk</h1>\r\n                {cartItems.length === 0 ?(\r\n                    <Message>\r\n                        Twój koszyk jest pusty <Link to='/'>Wróć do strony głównej</Link>\r\n                    </Message>\r\n                ): (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item=>(\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.quantity}\r\n                      onChange={(e) => dispatch(addToCart(item.product, e.target.value))}\r\n                      >\r\n                        {\r\n                          [...Array(item.countInStock).keys()].map((x)=>(\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ) )\r\n                        }\r\n\r\n                      </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={()=> removeFromCartHandler(item.product)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faTrash}/>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen"]},"metadata":{},"sourceType":"module"}